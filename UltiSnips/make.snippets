# ------------------------------------------
snippet default_template
ex      := main
srcdirs := src src/lib
hdrdirs := src/include src/lib/include
cflags  := -c -Wall -Wextra -Werror -Ofast
targdir := target

srcs := $(wildcard $(addsuffix /*.c,$(srcdirs)))
objs := $(patsubst %.c,%.o,$(srcs))
objs := $(patsubst src/%,$(targdir)/%,$(objs))
dirs := $(dir $(objs))
incl := $(addprefix -I,$(hdrdirs))




# common
all: build

build: $(ex)

run: build
	./$(ex)

re: fclean build

rerun: fclean run



# compilation and linking
$(ex): $(dirs) $(objs)
	gcc -o $@ $(objs)

$(targdir)/%.o: src/%.c
	gcc -o $@ $(cflags) $(incl) -MD $<

%/: # don't works on mac, remove '/'
	mkdir -p $@

include $(shell if [ -d $(targdir) ]; then find $(targdir) -name "*.d"; fi)



# accesory
clean:
	rm -rf $(targdir)

fclean: clean
	rm -f $(ex)

.PHONY: all build run re rerun test clean fclean



# END
endsnippet
# --------



snippet c_template
main: main.c
	gcc -o main main.c -Wall

run: main
	main

clean:
	rm main 

rerun: clean run
endsnippet
# --------



snippet tinixml_template
all: main

run: all
	main

main: main.o tinyxml.o tinystr.o tinyxmlerror.o tinyxmlparser.o
	g++ -o main main.o tinyxml.o tinystr.o tinyxmlerror.o tinyxmlparser.o

main.o: main.cpp
	g++ -c main.cpp 

tinyxml.o: tinyxml.cpp
	g++ -c tinyxml.cpp

tinystr.o: tinystr.cpp
	g++ -c tinystr.cpp

tinyxmlerror.o: tinyxmlerror.cpp
	g++ -c tinyxmlerror.cpp

tinyxmlparser.o: tinyxmlparser.cpp
	g++ -c tinyxmlparser.cpp





# end
endsnippet
# --------



snippet py
run:
	python3 main.py
endsnippet
# --------



snippet py_
run:
	python3 main.py
endsnippet
# --------



snippet html
run:
	firefox index.html
endsnippet
# --------



snippet note
$1: ${1/(\w+).*/$1.cpp/} ${1/(\w+).*/$1.hpp/}
	g++ $(CFLAGS) -o $1 ${1/(\w+).*/$1.cpp/}
$0
endsnippet
# --------



snippet sfml
-lsfml-graphics -lsfml-system -lsfml-window$0
endsnippet 
# --------



snippet p
$($1)$0
endsnippet
# --------
